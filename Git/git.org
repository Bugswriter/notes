#+TITLE: Git Notes
#+DESCRIPTION: My notes on git (version control system)
#+AUTHOR: Suraj(@bugswriter)

** Introduction
Git is a distributed version control system for tracking changes in source code during software 
development. 

** More about git
Git is a distributed VCS (Version control system). It means every developer have the copy of source
code in his own local machine. Simply it's for collaborating with other programmers and keeping 
track of changes in project's source code.

** Getting Started
Setting up git is very easy just install git package in your linux, mine is Arch Linux so for Arch 
I will use pacman.
#+BEGIN_SRC bash
pacman -S git
#+END_SRC

After this I can check my git version to make sure my git is installed correctly.
#+BEGIN_SRC bash
git --version
#+END_SRC

** Setting up some config values
Now after git installation we have to set some global config variables. We need these variables will tell
git installed in your local system about the user who is doing changes and commits.
#+BEGIN_SRC bash
git config --global user.name "Your Name"
git config --global user.email "youremail@domain.com"
#+END_SRC

You can check your config variables too (note: Ignore all extra variables just look name and email)
#+BEGIN_SRC bash
git config --list
#+END_SRC

If you ever need help on any of git command like action (git /<anything here is action>/). Like right now we did config action. We can do
=git help <verb>= or =git <verb> --help=. For example config action:
#+BEGIN_SRC bash
git help config
git config --help
#+END_SRC

** Two common Scenerios
*** Existing Project
Here you have a project already and you want to start tracking that project by using git.
For this case you have to initialize your project directory with git.
#+BEGIN_SRC bash
git init
#+END_SRC

This command will initialize your project with git and if you do =ls -a= You will find a new 
.git directory which contain all git data which track the data and make all magic possible.
*Note*: If at any point we want to revert things back and remove all git magic. Just do =rm -rf .git=.
*** Remote Project
Here you have an existing project remotely, somewhere on a remote server (github/gitlab) and
you want to work on it.
